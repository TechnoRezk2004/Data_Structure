#include <iostream>

using namespace std;
int choice;
int main() {
    int ch;
    do {

        cout << "1-sum 2 matrix \n 2-multi 2 matrix" << endl;
        cin >> choice;
        switch (choice) {
            case 1:
                int rows1, cols1,rows2, cols2;

            cout << "Enter the number of rows and columns: ";
            cin >> rows1 >> cols1 >> rows2 >> cols2;
            if (rows1 ==rows2 && cols1 ==cols2 ) {
                int matrix1[rows1][cols1], matrix2[rows2][cols2], result[100][100];

                cout << "Enter elements of matrix1:\n";
                for (int i = 0; i < rows1; i++) {
                    for (int j = 0; j < cols1; j++) {
                        cout << "Enter element of matrix1[" << i << "][" << j << "]: ";
                        cin >> matrix1[i][j];
                    }
                }
                cout << "Enter elements of matrix2:\n";
                for (int i = 0; i < rows2; i++) {
                    for (int j = 0; j < cols2; j++) {
                        cout << "Enter element of matrix2[" << i << "][" << j << "]: ";
                        cin >> matrix2[i][j];
                    }
                }
                for (int i = 0; i < rows1; i++) {
                    for (int j = 0; j < cols1; j++) {
                        result[i][j] = matrix1[i][j] + matrix2[i][j];
                    }
                }

                // Print the result
                cout << "Sum of the matrices:\n";
                for (int i = 0; i < rows1; i++) {
                    for (int j = 0; j < cols1; j++) {
                        cout << result[i][j] << " ";
                    }
                    cout << endl;
                }
            }
            else
                cout << "error\n";
            break;
            case 2:
                int r1, c1, r2, c2;

            cout << "Enter the dimensions of matrix1 (rows, columns): ";
            cin >> r1 >> c1;

            cout << "Enter the dimensions of matrix2 (rows, columns): ";
            cin >> r2 >> c2;

            if (c1 != r2) {
                cout << "Matrix multiplication not possible. Number of columns in matrix1 must equal the number of rows in matrix2.\n";
                return 1;
            }

            int matrix1[r1][c1], matrix2[r2][c2], result[r1][c2];

            cout << "Enter elements of matrix1:\n";
            for (int i = 0; i < r1; i++) {
                for (int j = 0; j < c1; j++) {
                    cout << "Enter element of matrix1[" << i << "][" << j << "]: ";
                    cin >> matrix1[i][j];
                }
            }
            cout << "Enter elements of matrix2:\n";
            for (int i = 0; i < r2; i++) {
                for (int j = 0; j < c2; j++) {
                    cout << "Enter element of matrix2[" << i << "][" << j << "]: ";
                    cin >> matrix2[i][j];
                }
            }



            for (int i = 0; i < r1; i++) {
                for (int j = 0; j < c2; j++) {
                    result[i][j] = 0;
                    for (int k = 0; k < c1; k++) {
                        result[i][j] += matrix1[i][k] * matrix2[k][j];
                    }
                }
            }

            cout << "Product of the matrices:\n";
            for (int i = 0; i < r1; i++) {
                for (int j = 0; j < c2; j++) {
                    cout << result[i][j] << " ";
                }
                cout << endl;
            }

            break;


        }

        cout<<"enter choice 1-y or 2-n: ";
        cin >> choice;
    } while (choice==1);
}





//               converts to functions
#include <iostream>

using namespace std;

// Function prototypes
void sumMatrices();
void multiplyMatrices();
void displayMatrix(int matrix[][100], int rows, int cols);

int main() {
    int choice;
    do {
        cout << "1 - Sum 2 matrices\n2 - Multiply 2 matrices\nEnter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                sumMatrices();
                break;
            case 2:
                multiplyMatrices();
                break;
            default:
                cout << "Invalid choice. Please try again.\n";
        }

        cout << "Enter choice: 1 for Yes or 2 for No: ";
        cin >> choice;
    } while (choice == 1);

    return 0;
}

// Function to sum two matrices
void sumMatrices() {
    int rows1, cols1, rows2, cols2;

    cout << "Enter the dimensions of the matrices (rows and columns): ";
    cin >> rows1 >> cols1 >> rows2 >> cols2;

    if (rows1 == rows2 && cols1 == cols2) {
        int matrix1[100][100], matrix2[100][100], result[100][100];

        cout << "Enter elements of matrix1:\n";
        for (int i = 0; i < rows1; i++) {
            for (int j = 0; j < cols1; j++) {
                cout << "Enter element of matrix1[" << i << "][" << j << "]: ";
                cin >> matrix1[i][j];
            }
        }

        cout << "Enter elements of matrix2:\n";
        for (int i = 0; i < rows2; i++) {
            for (int j = 0; j < cols2; j++) {
                cout << "Enter element of matrix2[" << i << "][" << j << "]: ";
                cin >> matrix2[i][j];
            }
        }

        for (int i = 0; i < rows1; i++) {
            for (int j = 0; j < cols1; j++) {
                result[i][j] = matrix1[i][j] + matrix2[i][j];
            }
        }

        cout << "Sum of the matrices:\n";
        displayMatrix(result, rows1, cols1);
    } else {
        cout << "Error: Matrices must have the same dimensions for addition.\n";
    }
}

// Function to multiply two matrices
void multiplyMatrices() {
    int r1, c1, r2, c2;

    cout << "Enter the dimensions of matrix1 (rows, columns): ";
    cin >> r1 >> c1;

    cout << "Enter the dimensions of matrix2 (rows, columns): ";
    cin >> r2 >> c2;

    if (c1 != r2) {
        cout << "Matrix multiplication not possible. Number of columns in matrix1 must equal the number of rows in matrix2.\n";
        return;
    }

    int matrix1[100][100], matrix2[100][100], result[100][100] = {0};

    cout << "Enter elements of matrix1:\n";
    for (int i = 0; i < r1; i++) {
        for (int j = 0; j < c1; j++) {
            cout << "Enter element of matrix1[" << i << "][" << j << "]: ";
            cin >> matrix1[i][j];
        }
    }

    cout << "Enter elements of matrix2:\n";
    for (int i = 0; i < r2; i++) {
        for (int j = 0; j < c2; j++) {
            cout << "Enter element of matrix2[" << i << "][" << j << "]: ";
            cin >> matrix2[i][j];
        }
    }

    for (int i = 0; i < r1; i++) {
        for (int j = 0; j < c2; j++) {
            for (int k = 0; k < c1; k++) {
                result[i][j] += matrix1[i][k] * matrix2[k][j];
            }
        }
    }

    cout << "Product of the matrices:\n";
    displayMatrix(result, r1, c2);
}

// Function to display a matrix
void displayMatrix(int matrix[][100], int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }
}
